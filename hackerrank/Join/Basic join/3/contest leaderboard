You did such a great job helping Julia with her last coding contest challenge that she wants you to work on this one, too!

The total score of a hacker is the sum of their maximum scores for all of the challenges. Write a query to print the hacker_id, name, and total score of the hackers ordered by the descending score. If more than one hacker achieved the same total score, then sort the result by ascending hacker_id. Exclude all hackers with a total score of  from your result.

Input Format

The following tables contain contest data:

Hackers: The hacker_id is the id of the hacker, and name is the name of the hacker. 

Submissions: The submission_id is the id of the submission, hacker_id is the id of the hacker who made the submission, challenge_id is the id of the challenge for which the submission belongs to, and score is the score of the submission. 

Sample Input

Hackers Table: 

Submissions Table: 

Sample Output

4071 Rose 191
74842 Lisa 174
84072 Bonnie 100
4806 Angela 89
26071 Frank 85
80305 Kimberly 67
49438 Patrick 43
Explanation

Hacker 4071 submitted solutions for challenges 19797 and 49593, so the total score .

Hacker 74842 submitted solutions for challenges 19797 and 63132, so the total score 

Hacker 84072 submitted solutions for challenges 49593 and 63132, so the total score .

The total scors for hackers 4806, 26071, 80305, and 49438 can be similarly calculated.


#Solution:
解法一：
SELECT h.hacker_id,h.name,TEMP2.sumsc 
from Hackers h inner join 
(SELECT sum(maxsc) as sumsc,hacker_id
FROM 
(SELECT max(Score) AS maxsc,
    hacker_id,
    challenge_id
    FROM submissions
    GROUP BY hacker_id,challenge_id) AS TEMP1
GROUP BY hacker_id)AS TEMP2
ON h.hacker_id=TEMP2.hacker_id
WHERE TEMP2.sumsc<>0
ORDER BY TEMP2.sumsc DESC,h.hacker_id ASC

这个解法就是不断创建derived table。先取max(score)的derived table.然后再去sum(max(score))的derived table
在derived table的基础上和原来的hackers table inner join 一下，取出相应的值。思路清晰，但是group by一定要弄清楚。

在这个解法中，要注意两个内容：
1.hacker_id,challenge_id在两次的derived table中并没有改名字，但是实际上的取值应该是不同的了。
2.group by 一定想明白，不然就会写错。
TEMP1 这个table中有三列：maxsc,hacker_id,challenge_id, 因为要取的是不同的人在不同的题中的最大值，所以就要group by hacker_id,challenge_id
TEMP2 这个table中有两列：sumsc,hacker_id, 要取的是不同的人所做的所有max(题目)的总和，所以要group by hacker_id.
在这里一直跑错，一直用group by hacker_id,challenge_id,如果是这样的话，那sum() 所取得是每个challenge_id的sum,即每个challenge_id 的max的本身。

#Query the two cities in STATION with the shortest and longest CITY names, as well as their respective lengths (i.e.: number of characters in the name). If there is more than one smallest or largest city, choose the one that comes first when ordered alphabetically.

Input Format

The STATION table is described as follows:

Station.jpg

where LAT_N is the northern latitude and LONG_W is the western longitude.

Sample Input

Let's say that CITY only has four entries: DEF, ABC, PQRS and WXY

Sample Output

ABC 3
PQRS 4
Explanation

When ordered alphabetically, the CITY names are listed as ABC, DEF, PQRS, and WXY, with the respective lengths  and . The longest-named city is obviously PQRS, but there are  options for shortest-named city; we choose ABC, because it comes first alphabetically.

Note 
You can write two separate queries to get the desired output. It need not be a single query.

#Solution 
解法一（SQL Server）：

SELECT TOP 1 city,len(city) FROM station
    WHERE len(city)<=ALL(select len(city) FROM station)
    ORDER BY city
    
SELECT TOP 1 city,len(city) FROM station
    WHERE len(city)>=ALL(select len(city) FROM station)
    ORDER BY city
    
在这里要注意几个内容：
1. top 1 不是top1,中间有个空格。
2.len(city)<=ALL(select len(city) FROM station) 取的是最小的。
  同时要注意：=是需要的，否则不能运行。
 
 解法二（MYSQL）:
 
 SELECT city,length(city) FROM station
  WHERE length(city)=(select min(length(city)) FROM station)
  ORDER BY city
  LIMIT 1;
 SELECT city,length(city) FROM station
  WHERE length(city)=(select max(length(city)) FROM station)
  ORDER BY city
  LIMIT 1;
  
